To Do:
(DONE?) Remove Symbol table from Tokenizer and place into Parser
(DONE?) Figure out how to capture function scope instead of numeric scope
(DONE?) Add to Symbols what their scope is, their declared type, and pointer to next item
CLEARED BLOCK - You cannot add identifiers to the symbol table every time you accept an id. This should only happen when a identifier is being declared or passed as a parameter
(DONE?)Create the symbol table to look like a linked list
	-Multiple symbols that have the same name but different scopes should be in the linked list
(DONE) Change parser functions to return their type for type checking

THEN START SOLVING FOR THESE:
functions declared int or float  must have a return value of the
   correct type.
void functions may or may not have a return, but must not return a
   value.
parameters and arguments agree in number
parameters and arguments agree in type
operand agreement
operand/operator agreement
array index agreement
variable declaration (all variables must be declared ... scope)
variable declaration (all variables declared once ... scope)
void functions cannot have a return value
each program must have one main function
return only simple structures
id's should not be type void
each function should be defined (actually a linker error)